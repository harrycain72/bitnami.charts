apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      release: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ template "nginx.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        ports:
        {{- if .Values.containerPort.HTTPS }}
        - name: https
          containerPort: {{ .Values.containerPort.HTTPS }}
          protocol: TCP
        {{- end }}

        {{- if .Values.containerPort.HTTP }}
        - name: http
          containerPort: {{ .Values.containerPort.HTTP }}
          protocol: TCP
        {{- end }}


   
        volumeMounts:
        {{- if .Values.vhost }}
        - name: nginx-vhost
          mountPath: /opt/bitnami/nginx/conf/vhosts
        {{- end }}

        {{- if .Values.externalConfiguration }}
        - name: nginx-configuration
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        {{- end }}

        {{- if .Values.existingTlsSecretName }}
        - name: tls-secret
          mountPath: /etc/ssl/certs/
        {{- end }}

      volumes:
      {{- if .Values.vhost }}
      - name: nginx-vhost
        configMap:
          name: {{ template "fullname" . }}
      {{- end }}

      {{- if .Values.externalConfiguration }}
      - name: nginx-configuration
        configMap:
          defaultMode: 420
          name: {{ template "fullname" . }}-conf
      {{- end }}

       {{- if .Values.existingTlsSecretName }}
      - name: tls-secret
        secret:
          defaultMode: 420
          secretName: {{ .Values.existingTlsSecretName }}
      {{- end }}
